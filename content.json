{"meta":{"title":"LetourTheFrance","subtitle":"passage","description":"Android��java","author":"ouzw","url":"http://yoursite.com/child"},"pages":[{"title":"","date":"2017-05-27T13:18:04.688Z","updated":"2017-05-27T13:18:04.688Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/child/categories/index.html","excerpt":"","text":"title: categories date: 2017-05-27 21:17:04"},{"title":"","date":"2017-05-27T13:16:18.220Z","updated":"2017-05-27T13:16:18.220Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/child/tags/index.html","excerpt":"","text":"title: tags date: 2017-05-27 21:12:47"}],"posts":[{"title":"Android笔记之控件","slug":"Android笔记","date":"2017-05-31T13:20:14.000Z","updated":"2017-06-05T15:31:53.456Z","comments":true,"path":"2017/05/31/Android笔记/","link":"","permalink":"http://yoursite.com/child/2017/05/31/Android笔记/","excerpt":"","text":"Android学习笔记之控件1.ViewGroupViewGroup父控件，管理多个View控件。通过View形成控件树。 上层控件负责下层控件的测量和绘制，并统一调度交互事件。 2.Viewview的测量，告诉系统画一个多大的View，在onMeasure()中进行。 3.MeasureSpec帮助测量View，32位测量值，高2位为测量模式，底30位为测量大小。用位运行模式为了提高效率。 4.测量模式 1.EXACTLY:精确模式，指定控件具体大小，系统默认也是这种模式。 2.AT_MOST：最大值模式，控件尺寸不超过某个值。 3.UNSPECIFIED：想多大就多大，通常情况下，绘制自定义View时用。 protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) { // TODO Auto-generated method stub mMeasureHeigth = MeasureSpec.getSize(heightMeasureSpec); mMeasureWidth = MeasureSpec.getSize(widthMeasureSpec); setMeasuredDimension(mMeasureWidth, mMeasureHeigth); initView(); } 5.View的绘制onDraw()方法，通过Canvas对象进行绘图。 6.ViewGroup的测量当为wrap_content时，对子View进行历遍获取所以子View大小， 决定自己大小。其他模式则通过具体值。 7.ViewGroup的绘制通常不需要，但会调用dispatchDraw()方法来绘制子View。 8.自定义View1.对现有控件进行扩展2.通过组合来实现新控件3.重写View来实现全新控件","categories":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/child/categories/Android/"}],"tags":[{"name":"Android","slug":"Android","permalink":"http://yoursite.com/child/tags/Android/"}]}]}